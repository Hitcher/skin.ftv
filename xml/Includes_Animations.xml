<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- Focused fade diffuse animation -->
	<include name="FadeDiffuseAnimationFO">
		<animation effect="fadediffuse" start="FFFFFFFF" end="FocusedColour" time="0" condition="$PARAM[FadeDiffuseConditionFO]">Conditional</animation>
	</include>
	<!-- Not focused fade diffuse animation -->
	<include name="FadeDiffuseAnimationNF">
		<animation effect="fadediffuse" start="FFFFFFFF" end="NotFocusedColour" time="0" condition="$PARAM[FadeDiffuseConditionNF]">Conditional</animation>
	</include>
	<!-- Disabled fade diffuse animation -->
	<include name="FadeDiffuseAnimationDisabled">
		<animation effect="fadediffuse" start="FFFFFFFF" end="DisabledColour" time="0" condition="$PARAM[FadeDiffuseConditionDisabled]">Conditional</animation>
	</include>
	<!-- Settings shadow animation -->
	<include name="SettingsShadowAnimation">
		<animation condition="Container.Content(addons)" type="Conditional">
			<effect easing="inout" end="100" start="0" time="120" tween="sine" type="fade" delay="80"/>
		</animation>
	</include>
	<!-- Home to window slide animation -->
	<include name="HomeToWindowSlideAnimation">
		<animation condition="String.IsEmpty(Window(home).Property(MainMenuFocus)) + String.IsEmpty(Window(home).Property(FocusRow)) + Window.Previous(home)" easing="inout" effect="slide" end="0,0" start="$PARAM[FocusRowID1_1]" time="540" tween="sine">WindowOpen</animation>
		<animation condition="String.IsEmpty(Window(home).Property(MainMenuFocus)) + String.IsEqual(Window(home).Property(FocusRow),1_2) + Window.Previous(home)" easing="inout" effect="slide" end="0,0" start="$PARAM[FocusRowID1_2]" time="540" tween="sine">WindowOpen</animation>
		<animation condition="String.IsEmpty(Window(home).Property(MainMenuFocus)) + String.IsEqual(Window(home).Property(FocusRow),2_2) + Window.Previous(home)" easing="inout" effect="slide" end="0,0" start="$PARAM[FocusRowID2_2]" time="540" tween="sine">WindowOpen</animation>
		<animation condition="String.IsEmpty(Window(home).Property(MainMenuFocus)) + String.IsEqual(Window(home).Property(FocusRow),1_3) + Window.Previous(home)" easing="inout" effect="slide" end="0,0" start="$PARAM[FocusRowID1_3]" time="540" tween="sine">WindowOpen</animation>
		<animation condition="String.IsEmpty(Window(home).Property(MainMenuFocus)) + String.IsEqual(Window(home).Property(FocusRow),2_3) + Window.Previous(home)" easing="inout" effect="slide" end="0,0" start="$PARAM[FocusRowID2_3]" time="540" tween="sine">WindowOpen</animation>
		<animation condition="String.IsEmpty(Window(home).Property(MainMenuFocus)) + String.IsEqual(Window(home).Property(FocusRow),3_3) + Window.Previous(home)" easing="inout" effect="slide" end="0,0" start="$PARAM[FocusRowID3_3]" time="540" tween="sine">WindowOpen</animation>
	</include>
	<!-- List bounce animation -->
	<include name="ListBounceAnimation">
		<animation condition="Window.IsVisible(1103)" reversible="false" type="Conditional">
			<effect easing="out" end="-40,0" start="0,0" time="60" tween="sine" type="slide"/>
			<effect delay="80" easing="out" end="40,0" start="0,0" time="120" tween="sine" type="slide"/>
		</animation>
	</include>
	<!-- Container move fade animation -->
	<include name="ContainerMoveFadeAnimation">
		<animation center="auto" condition="Control.HasFocus($PARAM[ListID]) | Container($PARAM[ListID]).OnNext | Container($PARAM[ListID]).OnPrevious" easing="inout" effect="fade" end="100" start="0" time="300" tween="sine">Focus</animation>
		<animation center="auto" condition="Container($PARAM[ListID]).OnNext | Container($PARAM[ListID]).OnPrevious" easing="inout" effect="fade" end="0" start="100" time="300" tween="sine">UnFocus</animation>
	</include>
	<!-- Focused list fade animation -->
	<include name="FocusedListIDAnimation">
		<animation center="auto" condition="Control.HasFocus($PARAM[ListID])" easing="inout" effect="fade" end="0" start="100" time="300" tween="sine">Focus</animation>
		<animation center="auto" condition="Control.HasFocus($PARAM[ListID])" easing="inout" effect="fade" end="100" start="0" time="300" tween="sine">UnFocus</animation>
	</include>
	<!-- Focused list fade diffuse animation -->
	<include name="FocusedListIDFadeDiffuseAnimation">
		<animation center="auto" condition="Control.HasFocus($PARAM[ListID])" easing="inout" effect="fadediffuse" end="FFFFFFFF" start="FF898989" time="300" tween="sine">Focus</animation>
		<animation center="auto" condition="Control.HasFocus($PARAM[ListID])" easing="inout" effect="fadediffuse" end="FF898989" start="FFFFFFFF" time="300" tween="sine">UnFocus</animation>
		<animation center="auto" condition="!Control.HasFocus($PARAM[ListID])" easing="inout" effect="fadediffuse" end="FF898989" start="FFFFFFFF" time="0" tween="sine">Conditional</animation>
	</include>
	<!-- Item list fade diffuse animation -->
	<include name="ItemListFadeDiffuseAnimation">
		<animation effect="fadediffuse" start="FF898989" end="FF898989" time="0" condition="true">Conditional</animation>
	</include>
	<!-- Dialog zoom/fade visible animation -->
	<include name="DialogZoomFadeVisibleAnimation">
		<animation reversible="true" type="Visible">
			<effect center="auto" easing="inout" end="100" start="92" time="120" tween="sine" type="zoom"/>
			<effect easing="inout" end="100" start="0" time="120" tween="sine" type="fade"/>
		</animation>
		<animation reversible="true" type="Hidden">
			<effect center="auto" easing="inout" end="92" start="100" time="120" tween="sine" type="zoom"/>
			<effect easing="inout" end="0" start="100" time="120" tween="sine" type="fade"/>
		</animation>
	</include>
	<!-- Dialog zoom/fade window open animation -->
	<include name="DialogZoomFadeWindowOpenAnimation">
		<animation reversible="true" type="WindowOpen">
			<effect center="auto" easing="inout" end="100" start="92" time="120" tween="sine" type="zoom"/>
			<effect easing="inout" end="100" start="0" time="120" tween="sine" type="fade"/>
		</animation>
		<animation reversible="true" type="WindowClose">
			<effect center="auto" easing="inout" end="92" start="100" time="120" tween="sine" type="zoom"/>
			<effect easing="inout" end="0" start="100" time="120" tween="sine" type="fade"/>
		</animation>
	</include>
	<!-- Startup fade animation -->
	<include name="StartUpFadeAnimation">
		<animation effect="fade" end="100" start="0" time="200" delay="1800">WindowOpen</animation>
		<animation effect="fade" end="100" start="100" time="0">WindowClose</animation>
	</include>
	<!-- Custom fade animation -->
	<include name="CustomFadeAnimation">
		<animation effect="fade" start="100" end="0" time="180">WindowClose</animation>
	</include>
	<!-- Window close fade animation -->
	<include name="WindowCloseFadeAnimation">
		<animation effect="fade" start="100" end="0" time="325">WindowClose</animation>
	</include>
	<!-- Home fade animation -->
	<include name="WindowHomeFadeAnimation">
		<animation effect="fade" end="100" start="0" time="200">WindowOpen</animation>
		<animation effect="fade" end="100" start="100" time="0">WindowClose</animation>
		<animation effect="fade" end="100" start="0" time="200" condition="!Window.IsActive(favourites)">Conditional</animation>
		<animation effect="fade" end="0" start="100" time="0" condition="Window.IsActive(favourites)">Conditional</animation>
		<animation effect="fade" end="100" start="0" time="200" condition="!Window.IsActive(shutdownmenu)">Conditional</animation>
		<animation effect="fade" end="0" start="100" time="0" condition="Window.IsActive(shutdownmenu)">Conditional</animation>
	</include>
	<!-- Visible fade animation -->
	<include name="VisibleFadeAnimation">
		<animation effect="fade" end="100" start="0" time="200">Visible</animation>
		<animation effect="fade" end="0" start="100" time="200">Hidden</animation>
	</include>
	<!-- Visible delayed fade animation -->
	<include name="VisibleDelayFadeAnimation">
		<animation delay="200" easing="inout" effect="fade" end="100" start="0" time="120" tween="sine">Visible</animation>
		<animation effect="fade" end="0" start="100" time="0">Hidden</animation>
	</include>
	<!-- Notification fade animation -->
	<include name="NotificationAnimation">
		<animation easing="inout" effect="slide" end="0,0" start="0,-222" time="120" tween="sine">WindowOpen</animation>
		<animation easing="inout" effect="slide" end="0,-222" start="0,0" time="120" tween="sine">WindowClose</animation>
	</include>
	<!-- Dialog fade animation -->
	<include name="DialogAnimation">
		<animation easing="inout" effect="fade" end="100" start="0" time="120" tween="sine">WindowOpen</animation>
		<animation easing="inout" effect="fade" end="0" start="100" time="120" tween="sine">WindowClose</animation>
	</include>
	<!-- Dialog fade and zoom animation -->
	<include name="DialogZoomAnimation">
		<animation condition="$PARAM[OpenCondition]" type="WindowOpen">
			<effect center="auto" end="100" start="90" time="120" type="zoom"/>
			<effect easing="inout" end="100" start="0" time="120" tween="sine" type="fade"/>
		</animation>
		<animation condition="$PARAM[CloseCondition]" type="WindowClose">
			<effect center="auto" end="90" start="100" time="120" type="zoom"/>
			<effect easing="inout" end="0" start="100" time="120" tween="sine" type="fade"/>
		</animation>
	</include>
	<!-- Dialog slide animation -->
	<include name="DialogSlideAnimation">
		<animation condition="!Window.IsVisible(script-skinshortcuts.xml) + !Window.IsVisible(addoninformation) + [Window.IsVisible(addonbrowser) | Window.IsVisible(settingscategory.xml) | Window.IsVisible(skinsettings)]" effect="slide" end="-148,-22">Conditional</animation>
		<animation condition="!Window.IsVisible(1105) + !Window.IsVisible(script-skinshortcuts.xml) + !Window.IsVisible(addoninformation) + [Window.IsVisible(addonbrowser) | Window.IsVisible(settingscategory.xml) | Window.IsVisible(skinsettings)]" reversible="false" type="WindowOpen">
			<effect end="100" start="0" time="200" type="fade" delay="100"/>
			<effect easing="inout" end="0,0" start="1000,0" time="200" tween="sine" type="slide" delay="100"/>
		</animation>
		<animation condition="!Window.IsVisible(1105) + !Window.IsVisible(script-skinshortcuts.xml) + !Window.IsVisible(addoninformation) + [Window.IsVisible(addonbrowser) | Window.IsVisible(settingscategory.xml) | Window.IsVisible(skinsettings)]" reversible="false" type="WindowClose">
			<effect end="0" start="100" time="120" type="fade"/>
			<effect easing="inout" end="1000,0" start="0,0" time="120" tween="sine" type="slide"/>
		</animation>
	</include>
	<!-- Dialog video info animation -->
	<include name="DialogVideoInfoAnimation">
		<animation condition="Control.HasFocus(50) | Control.HasFocus(500) | Control.HasFocus(501) | Control.HasFocus(502)" effect="fade" end="6" start="100" time="200">Conditional</animation>
	</include>
	<!-- Home Widgets Animation -->
	<include name="HomeWidgetsAnimation">
		<animation condition="Container(99).OnNext" reversible="false" type="Visible">
			<effect center="1920,1080" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
			<effect delay="280" easing="in" end="0,0" start="0,-80" time="180" tween="sine" type="slide"/>
			<effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
		</animation>
		<animation condition="Container(99).OnPrevious" reversible="false" type="Visible">
			<effect center="1920,1080" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
			<effect delay="280" easing="in" end="0,0" start="0,80" time="180" tween="sine" type="slide"/>
			<effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
		</animation>
		<animation reversible="false" type="Hidden">
			<effect center="1920,1080" easing="out" end="98" start="100" time="180" tween="linear" type="zoom"/>
			<effect easing="out" end="0" start="100" time="180" tween="linear" type="fade"/>
		</animation>
		<animation condition="Window.IsVisible(1101)" reversible="false" type="Conditional">
			<effect easing="out" end="0,60" start="0,0" time="60" tween="sine" type="slide"/>
			<effect delay="80" easing="out" end="0,-60" start="0,0" time="120" tween="sine" type="slide"/>
		</animation>
		<animation condition="Window.IsVisible(1102)" reversible="false" type="Conditional">
			<effect easing="out" end="0,-60" start="0,0" time="60" tween="sine" type="slide"/>
			<effect delay="80" easing="out" end="0,60" start="0,0" time="120" tween="sine" type="slide"/>
		</animation>
	</include>
	<!-- Home menu slide animations -->
	<include name="HomeMenuSlideAnimation">
		<animation condition="String.IsEqual(Container(99).NumItems,13)" effect="slide" end="0,36" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,12)" effect="slide" end="0,100" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,11)" effect="slide" end="0,164" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,10)" effect="slide" end="0,228" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,9)" effect="slide" end="0,292" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,8)" effect="slide" end="0,356" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,7)" effect="slide" end="0,420" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,6)" effect="slide" end="0,484" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,5)" effect="slide" end="0,548" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,4)" effect="slide" end="0,612" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,3)" effect="slide" end="0,676" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,2)" effect="slide" end="0,740" time="0">Conditional</animation>
		<animation condition="String.IsEqual(Container(99).NumItems,1)" effect="slide" end="0,804" time="0">Conditional</animation>
		<animation condition="Container(99).Row(0)" effect="slide" end="0,0" time="200">Conditional</animation>
		<animation condition="Container(99).Row(1)" effect="slide" end="0,-22" time="200">Conditional</animation>
		<animation condition="Container(99).Row(2)" effect="slide" end="0,-44" time="200">Conditional</animation>
		<animation condition="Container(99).Row(3)" effect="slide" end="0,-66" time="200">Conditional</animation>
		<animation condition="Container(99).Row(4)" effect="slide" end="0,-88" time="200">Conditional</animation>
		<animation condition="Container(99).Row(5)" effect="slide" end="0,-110" time="200">Conditional</animation>
		<animation condition="Container(99).Row(6)" effect="slide" end="0,-132" time="200">Conditional</animation>
		<animation condition="Container(99).Row(7)" effect="slide" end="0,-154" time="200">Conditional</animation>
		<animation condition="Container(99).Row(8)" effect="slide" end="0,-176" time="200">Conditional</animation>
		<animation condition="Container(99).Row(9)" effect="slide" end="0,-198" time="200">Conditional</animation>
		<animation condition="Container(99).Row(10)" effect="slide" end="0,-220" time="200">Conditional</animation>
		<animation condition="Container(99).Row(11)" effect="slide" end="0,-244" time="200">Conditional</animation>
		<animation condition="Container(99).Row(12)" effect="slide" end="0,-266" time="200">Conditional</animation>
	</include>
</includes>
